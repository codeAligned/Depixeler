
Authors: Ryan Casey, Naoki Eto

To compile this program, simple type "make".
Note that this program requires OpenGL, and the Makefile is 
set up to compile for Mac OSX.  If you are not using OSX, you
will most likely need to update the LDFLAGS line in the makefile.
(There is a commented out line in the makefile that should work 
for Linux).

This will create an executable called "depixeler".

PROGRAM: depixeler

PURPOSE: Implementation of several pixel upscaling techniques, able to be toggle 
by keypress as to be able to compare techniques easily for a given image.  

USAGE: ./depixeler [xRes] [yRes] [Run]

For example, run as follows:
./depixeler 600 600 smw2_yoshi_01_input.png

To render the regular image with NO glDrawPixels and NO EPX, press [1]

To render the image with NO glDrawPixels but with EPX (Please note that EPX is rendered incorrectly here as we did not take into account another case), press [2]

To render the image with glDrawPixels and NO EPX, press [3]

To render the image with glDrawPixel, but with EPX, press [4]

To render the image with glDrawPixel, but with scale2x, press [5] (Please note that this looks EXACTLY the same as EPX except it is rendered slightly faster)

To render the image with glDrawPizel, but with scale3x, press [6]

To render the image with scale4x, press [7] (Note that this is scale2x applied twice)

To render the image with the Eagle Algorithm, press [8] 

To render this image with a Bilinear Interpolation Filter, press [9]

Exit the program with 'q', 'Q', or the Esc key.

So basically:

key press | glDrawPixels | original | epx | scale2x | scale3x | scale4x | eagle | bilinear 
------------------------------------------------------------------------------------------
   [1]    |              |    X     |     |         |         |         |		|	
------------------------------------------------------------------------------------------
   [2]    |              |          |  X  |         |         |         |		|
------------------------------------------------------------------------------------------
   [3]    |      X       |    X     |     |         |         |       	|		|
------------------------------------------------------------------------------------------
   [4]    |      X       |          |  X  |         |         |        	|		|
------------------------------------------------------------------------------------------
   [5]    |      X       |          |     |    X    |         |       	|		|
------------------------------------------------------------------------------------------
   [6]    |      X       |          |     |         |    X    |         |		|
------------------------------------------------------------------------------------------
   [7]    |      X       |          |     |         |         |    X 	|		|
------------------------------------------------------------------------------------------
   [8]    |      X       |          |     |         |         |    		|	X	|
------------------------------------------------------------------------------------------
   [9]    |      X       |          |     |         |         |    		|		|	X


